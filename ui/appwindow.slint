import { Button, VerticalBox, ScrollView, ListView, StandardListView } from "std-widgets.slint";

export component FlatFileTree {
    in property <[string]> files;
}

export enum SolItemType {
    Folder,
    File,
    Script,
    Eml,
}

export struct SolItem {
    name: string,
    item_type: SolItemType,
    active: bool,
    selected: bool,
    index: int,
    path: string,
}

export struct pos {
    x: int,
    y: int,
}


export component AppWindow inherits Window {
    in-out property <[SolItem]> files;
    in-out property <[StandardListViewItem]> child_files_standard;
    in-out property <string> content_of_file;
    in-out property <pos> position;
    in-out property <int> child_pos: child.current-item;


    in-out property <string> find_value: find-box.text;

    callback key_presed(KeyEvent);
    callback find(string);

    width: 1000px;
    height: 500px;

    background: #2E3440;

    FocusScope {
        key-pressed(event) => {
            key_presed(event);
            accept
        }

        GridLayout {
            Row {
                find-box := TextInput {
                    text: "Search";
                }
            }

            Row {

                // TODO: YOU KNOW WHAT TO DO

            // TODO: Replace with pagination
            // ScrollView {
            //     width: parent.width / 3;
            //     height: parent.height;
            //     viewport-height: parent.height;
            //
                ListView {
                    width: root.width / 3;
                    for data in files: Rectangle {
                        GridLayout {
                            Row {
                                Rectangle {
                                    background: #434C5E;

                                    Text {
                                        text: data.name;
                                    }
                                }
                            }
                        }
                    }
                }

                child := StandardListView {
                    width: root.width / 3;
                    // for data in child_files: Rectangle {
                    //     GridLayout {
                    //         Row {
                    //             Rectangle {
                    //                 background: data.index == position.y ? #3B4252 : #4C56AA;
                    //
                    //                 Text {
                    //                     text: data.name;
                    //                 }
                    //             }
                    //         }
                    //     }
                    // }
                    current-item: position.y;
                    model: child_files_standard;
                    text := Text{
                        text: position.y;
                    }
                }

                ScrollView {
                    width: root.width / 3;
                    Text {
                        text: content_of_file;
                    }
                }
            }
        }
    }
}
